/** $awkdoc$ ********************************************************

A version of quicksort for testing recursion: reads and sorts
19 CHARACTERs.

** $endawk$ ********************************************************/

char  A[21];
void  readarray()
{
  int  i;
  write ("A?");
  i = 1;
  while (i < 20)
    {
      write (i);
      read (A[i]);
      i = i + 1;
    }
}
void  writearray()
{
  int  i;
  write ("A:");
  i = 1;
  while (i < 20)
    {
      write (A[i]);
      i = i + 1;
    }
}
int partition(char B[21], int p, int r)
{
  int i, j;
  char x, t;
  x = B[p];
  i = p - 1;
  j = r + 1;
  while (1)
    {
      j = j-1;
      while (B[j] > x)
        {
          j = j-1;
        }
      i = i+1;
      while (B[i] < x)
        {
          i = i+1;
        }
      if (i < j) {
            t = B[i];
            B[i] = B[j];
            B[j] = t;
      }
      else {
          return j;
        }
    }
}
void quicksort(char Z[21],int p, int r )
{
  int q;
  if (p < r)
      {
        q = partition(Z,p,r);
        quicksort(Z,p,q);
        quicksort(Z,q+1,r);
      }
}

void main()
{
  int a;

  A[0] = ' '; A[20] = '~';
  readarray();
  writearray();
  quicksort(A,1,19);
  writearray();
}
